{"ast":null,"code":"var _jsxFileName = \"/Users/emilygilbertsen/Desktop/Personal Work/google-books-library/client/src/pages/Shelf/index.js\";\nimport React, { Component } from \"react\";\nimport DeleteBtn from \"../../components/DeleteBtn\";\nimport Jumbotron from \"../../components/Jumbotron\";\nimport API from \"../../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../../components/Grid\";\nimport { List, ListItem } from \"../../components/List\";\nimport './style.css';\n\nclass Shelf extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      books: []\n    };\n\n    this.componentDidMount = () => {\n      this.loadSavedBooks();\n    };\n\n    this.deleteBook = id => {\n      API.deleteBook(id).then(res => this.loadSavedBooks()).catch(err => console.log(err));\n    };\n  }\n\n  // Loads all books saved books and sets them to books\n  loadSavedBooks() {\n    API.getBooks().then(res => {\n      this.setState({\n        books: res.data\n      });\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      size: \"md-12\",\n      className: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Jumbotron, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }\n    }, \"Bookshelf\")), this.state.books.length ? /*#__PURE__*/React.createElement(List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    }, this.state.books.map(book => /*#__PURE__*/React.createElement(ListItem, {\n      key: book._id,\n      className: \"bookBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      size: \"md-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: book.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      size: \"md-9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: book.link,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 27\n      }\n    }, book.title, \" by \", book.author)), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }\n    }, \"Description: \", book.description), /*#__PURE__*/React.createElement(DeleteBtn, {\n      onClick: () => this.deleteBook(book._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    })))))) : /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, \"No saved books to display\"))));\n  }\n\n}\n\nexport default Shelf;","map":{"version":3,"sources":["/Users/emilygilbertsen/Desktop/Personal Work/google-books-library/client/src/pages/Shelf/index.js"],"names":["React","Component","DeleteBtn","Jumbotron","API","Link","Col","Row","Container","List","ListItem","Shelf","state","books","componentDidMount","loadSavedBooks","deleteBook","id","then","res","catch","err","console","log","getBooks","setState","data","render","length","map","book","_id","image","link","title","author","description"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport DeleteBtn from \"../../components/DeleteBtn\";\nimport Jumbotron from \"../../components/Jumbotron\";\nimport API from \"../../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../../components/Grid\";\nimport { List, ListItem } from \"../../components/List\";\nimport './style.css';\n\nclass Shelf extends Component {\n  state = {\n    books: []\n  };\n\n  // Setting saved books to books state variable\n  componentDidMount = () => {\n    this.loadSavedBooks();\n  }\n  // Loads all books saved books and sets them to books\n  loadSavedBooks() {\n    API.getBooks()\n      .then(res => {\n        this.setState({\n          books: res.data\n        })\n      })\n      .catch(err => console.log(err));\n  };\n\n  // Deletes a book from the database with a given id, then reloads books from the db\n  deleteBook = id => {\n    API.deleteBook(id)\n      .then(res => this.loadSavedBooks())\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-12\" className>\n            <Jumbotron>\n              <h1>Bookshelf</h1>\n            </Jumbotron>\n            {this.state.books.length ? (\n              <List>\n                {this.state.books.map(book => (\n                  <ListItem key={book._id} className='bookBox'>\n                    <Row>\n                      <Col size=\"md-3\">\n                        <img src={book.image} />\n                      </Col>\n                      <Col size=\"md-9\">\n                        <Link to={book.link}>\n                          <strong>\n                            {book.title} by {book.author}\n                          </strong>\n                        </Link>\n                        <p>Description: {book.description}</p>\n                        <DeleteBtn onClick={() => this.deleteBook(book._id)} />\n                      </Col>\n                    </Row>\n\n                  </ListItem>\n                ))}\n              </List>\n            ) : (\n                <h3>No saved books to display</h3>\n              )}\n          </Col>\n        </Row>\n      </Container >\n    );\n  }\n}\nexport default Shelf;\n"]},"metadata":{},"sourceType":"module"}
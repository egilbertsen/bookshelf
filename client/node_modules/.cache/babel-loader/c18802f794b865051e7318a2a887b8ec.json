{"ast":null,"code":"var _jsxFileName = \"/Users/emilygilbertsen/Desktop/Personal Work/bookshelf/client/src/components/BookSpine/index.js\";\nimport React, { Component } from \"react\";\nimport './style.css';\nimport { Link } from \"react-router-dom\";\nimport DeleteBtn from \"../DeleteBtn\";\nimport ArrowBtn from \"../ArrowBtn\";\nexport default class BookSpine extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSpineClick = event => {\n      event.preventDefault();\n      this.setState(prevState => ({\n        open: !prevState.open\n      }));\n    };\n\n    this.state = {\n      open: false\n    };\n  }\n\n  render() {\n    // Formatting our author list for display\n    let formattedAuthors;\n\n    if (this.props.authors.length < 1) {\n      formattedAuthors = \"Unknown\";\n    } else if (this.props.authors.length === 1) {\n      formattedAuthors = this.props.authors;\n    } else if (this.props.authors.length === 2) {\n      const rawAuthors = this.props.authors;\n      formattedAuthors = rawAuthors.join(' and ');\n    } else if (this.props.authors.length > 2) {\n      const rawAuthors = this.props.authors;\n      const lastGuy = rawAuthors.pop();\n      formattedAuthors = rawAuthors.join(', ') + ', and ' + lastGuy;\n    } // setting up conditional rendering for open state\n\n\n    let isOpenStyle;\n    let bookCoverAnimation;\n    let coverContAnim;\n\n    if (this.state.open) {\n      isOpenStyle = {\n        marginLeft: \"5px\",\n        marginRight: \"5px\",\n        boxShadow: \"rgba(0, 0, 0, 0.3) 0px 19px 38px, rgba(0, 0, 0, 0.22) 0px 15px 12px\"\n      };\n      bookCoverAnimation = {\n        height: \"300px\",\n        width: \"300px\",\n        transition: \"all .5s ease\"\n      };\n      coverContAnim = {\n        opacity: \"1\",\n        transitionDelay: \".4s\",\n        transition: \"all .5s ease\"\n      };\n    } else {\n      isOpenStyle = {\n        boxShadow: \"none\"\n      };\n      bookCoverAnimation = {\n        width: \"000px\",\n        height: \"300px\",\n        transitionDelay: \".4s\",\n        transition: \"all .5s ease\"\n      };\n      coverContAnim = {\n        opacity: \"0\",\n        transition: \"all .5s ease\"\n      };\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: isOpenStyle,\n      className: \"bookBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      key: this.props._id,\n      className: \"spineBod\",\n      onClick: this.handleSpineClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, this.props.title, \" by \", formattedAuthors), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(ArrowBtn, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"coverBod\",\n      style: bookCoverAnimation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"coverCont\",\n      style: coverContAnim,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"coverImgHolder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.props.image,\n      className: \"coverImg\",\n      alt: \"bookcover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"coverText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: this.props.link,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 33\n      }\n    }, this.props.title, \" by \", formattedAuthors)), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"desc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 32\n      }\n    }, \"Description: \"), this.props.description, \" \"), /*#__PURE__*/React.createElement(DeleteBtn, {\n      onClick: this.props.handleDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 29\n      }\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/emilygilbertsen/Desktop/Personal Work/bookshelf/client/src/components/BookSpine/index.js"],"names":["React","Component","Link","DeleteBtn","ArrowBtn","BookSpine","constructor","props","handleSpineClick","event","preventDefault","setState","prevState","open","state","render","formattedAuthors","authors","length","rawAuthors","join","lastGuy","pop","isOpenStyle","bookCoverAnimation","coverContAnim","marginLeft","marginRight","boxShadow","height","width","transition","opacity","transitionDelay","_id","title","image","link","description","handleDelete"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport './style.css';\nimport { Link } from \"react-router-dom\";\nimport DeleteBtn from \"../DeleteBtn\";\nimport ArrowBtn from \"../ArrowBtn\";\n\nexport default class BookSpine extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false\n        }\n    }\n\n    handleSpineClick = event => {\n        event.preventDefault();\n        this.setState(prevState => ({\n            open: !prevState.open\n        }));\n    }\n\n    render() {\n\n        // Formatting our author list for display\n\n        let formattedAuthors;\n\n        if (this.props.authors.length < 1) {\n            formattedAuthors = \"Unknown\"\n        } else if (this.props.authors.length === 1) {\n            formattedAuthors = this.props.authors;\n        } else if (this.props.authors.length === 2) {\n            const rawAuthors = this.props.authors;\n            formattedAuthors = rawAuthors.join(' and ')\n        } else if (this.props.authors.length > 2) {\n            const rawAuthors = this.props.authors;\n            const lastGuy = rawAuthors.pop();\n            formattedAuthors = rawAuthors.join(', ') + ', and ' + lastGuy;\n        }\n\n\n        // setting up conditional rendering for open state\n\n        let isOpenStyle;\n        let bookCoverAnimation;\n        let coverContAnim;\n\n        if (this.state.open) {\n\n            isOpenStyle = {\n                marginLeft: \"5px\",\n                marginRight: \"5px\",\n                boxShadow: \"rgba(0, 0, 0, 0.3) 0px 19px 38px, rgba(0, 0, 0, 0.22) 0px 15px 12px\"\n            }\n\n            bookCoverAnimation = {\n                height: \"300px\",\n                width: \"300px\",\n                transition: \"all .5s ease\"\n            }\n\n            coverContAnim = {\n                opacity: \"1\",\n                transitionDelay: \".4s\",\n                transition: \"all .5s ease\"\n            }\n\n        } else {\n\n            isOpenStyle = { boxShadow: \"none\" }\n\n            bookCoverAnimation = {\n                width: \"000px\",\n                height: \"300px\",\n                transitionDelay: \".4s\",\n                transition: \"all .5s ease\"\n            }\n\n            coverContAnim = {\n                opacity: \"0\",\n                transition: \"all .5s ease\"\n            }\n        }\n\n\n        return (\n            <div style={isOpenStyle} className=\"bookBox\">\n\n                <div key={this.props._id} className=\"spineBod\" onClick={this.handleSpineClick}>\n                    <div>\n                    {this.props.title} by {formattedAuthors}\n                    </div><h3>\n                        \n                    </h3>\n                    <ArrowBtn></ArrowBtn>\n                </div>\n\n                <div className=\"coverBod\" style={bookCoverAnimation}>\n                    <div className=\"coverCont\" style={coverContAnim}>\n                        <div className=\"coverImgHolder\">\n                            <img src={this.props.image} className=\"coverImg\" alt=\"bookcover\" />\n                        </div>\n                        <div className=\"coverText\">\n                            <Link to={this.props.link}>\n                                <h4>\n                                    {this.props.title} by {formattedAuthors}\n                                </h4>\n                            </Link>\n                            <p><span className=\"desc\">Description: </span>{this.props.description} </p>\n                            <DeleteBtn onClick={this.props.handleDelete} />\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n}    "]},"metadata":{},"sourceType":"module"}
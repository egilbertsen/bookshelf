{"ast":null,"code":"import React,{Component}from\"react\";import Jumbotron from\"../../components/Jumbotron\";import API from\"../../utils/API\";import{Col,Row,Container}from\"../../components/Grid\";import'./style.css';import BookSpine from\"../../components/BookSpine\";class Shelf extends Component{constructor(...args){super(...args);this.state={books:[]};this.componentDidMount=()=>{this.loadSavedBooks();};this.handleDelete=id=>{API.deleteBook(id).then(res=>this.loadSavedBooks()).catch(err=>console.log(err));};}// Loads all books saved books and sets them to books\nloadSavedBooks(){API.getBooks().then(res=>{this.setState({books:res.data});}).catch(err=>console.log(err));}render(){return/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{size:\"md-12\",className:\"bookcase\"},/*#__PURE__*/React.createElement(Jumbotron,null,/*#__PURE__*/React.createElement(\"h1\",null,\"Bookshelf\")),this.state.books.length?/*#__PURE__*/React.createElement(\"div\",{className:\"shelf\"},this.state.books.map(book=>/*#__PURE__*/React.createElement(BookSpine,{key:book._id,title:book.title,authors:book.authors,link:book.link,image:book.image,description:book.description,handleDelete:()=>this.handleDelete(book._id)}))):/*#__PURE__*/React.createElement(\"h3\",null,\"No saved books to display\"))));}}export default Shelf;","map":{"version":3,"sources":["/Users/emilygilbertsen/Desktop/GitHub/bookshelf/client/src/pages/Shelf/index.js"],"names":["React","Component","Jumbotron","API","Col","Row","Container","BookSpine","Shelf","state","books","componentDidMount","loadSavedBooks","handleDelete","id","deleteBook","then","res","catch","err","console","log","getBooks","setState","data","render","length","map","book","_id","title","authors","link","image","description"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,SAAP,KAAsB,4BAAtB,CACA,MAAOC,CAAAA,GAAP,KAAgB,iBAAhB,CACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,SAAnB,KAAoC,uBAApC,CACA,MAAO,aAAP,CACA,MAAOC,CAAAA,SAAP,KAAsB,4BAAtB,CAEA,KAAMC,CAAAA,KAAN,QAAoBP,CAAAA,SAAU,0CAC5BQ,KAD4B,CACpB,CACNC,KAAK,CAAE,EADD,CADoB,MAM5BC,iBAN4B,CAMR,IAAM,CACxB,KAAKC,cAAL,GACD,CAR2B,MAqB5BC,YArB4B,CAqBbC,EAAE,EAAI,CACnBX,GAAG,CAACY,UAAJ,CAAeD,EAAf,EACGE,IADH,CACQC,GAAG,EAAI,KAAKL,cAAL,EADf,EAEGM,KAFH,CAESC,GAAG,EAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFhB,EAGD,CAzB2B,EAS5B;AACAP,cAAc,EAAG,CACfT,GAAG,CAACmB,QAAJ,GACGN,IADH,CACQC,GAAG,EAAI,CACX,KAAKM,QAAL,CAAc,CACZb,KAAK,CAAEO,GAAG,CAACO,IADC,CAAd,EAGD,CALH,EAMGN,KANH,CAMSC,GAAG,EAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANhB,EAOD,CASDM,MAAM,EAAG,CACP,mBACE,oBAAC,SAAD,EAAW,KAAK,KAAhB,eACE,oBAAC,GAAD,mBACE,oBAAC,GAAD,EAAK,IAAI,CAAC,OAAV,CAAkB,SAAS,CAAE,UAA7B,eACE,oBAAC,SAAD,mBACE,0CADF,CADF,CAIG,KAAKhB,KAAL,CAAWC,KAAX,CAAiBgB,MAAjB,cACC,2BAAK,SAAS,CAAC,OAAf,EACG,KAAKjB,KAAL,CAAWC,KAAX,CAAiBiB,GAAjB,CAAqBC,IAAI,eACxB,oBAAC,SAAD,EACE,GAAG,CAAEA,IAAI,CAACC,GADZ,CAEE,KAAK,CAAED,IAAI,CAACE,KAFd,CAGE,OAAO,CAAEF,IAAI,CAACG,OAHhB,CAIE,IAAI,CAAEH,IAAI,CAACI,IAJb,CAKE,KAAK,CAAIJ,IAAI,CAACK,KALhB,CAME,WAAW,CAAIL,IAAI,CAACM,WANtB,CAOE,YAAY,CAAE,IAAM,KAAKrB,YAAL,CAAkBe,IAAI,CAACC,GAAvB,CAPtB,EADD,CADH,CADD,cAgBG,0DApBN,CADF,CADF,CADF,CA6BD,CAzD2B,CA2D9B,cAAerB,CAAAA,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Jumbotron from \"../../components/Jumbotron\";\nimport API from \"../../utils/API\";\nimport { Col, Row, Container } from \"../../components/Grid\";\nimport './style.css';\nimport BookSpine from \"../../components/BookSpine\";\n\nclass Shelf extends Component {\n  state = {\n    books: []\n  };\n\n  // Setting saved books to books state variable\n  componentDidMount = () => {\n    this.loadSavedBooks();\n  }\n  // Loads all books saved books and sets them to books\n  loadSavedBooks() {\n    API.getBooks()\n      .then(res => {\n        this.setState({\n          books: res.data\n        })\n      })\n      .catch(err => console.log(err));\n  };\n\n  // Deletes a book from the database with a given id, then reloads books from the db\n  handleDelete = id => {\n    API.deleteBook(id)\n      .then(res => this.loadSavedBooks())\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    return (\n      <Container fluid >\n        <Row>\n          <Col size=\"md-12\" className= \"bookcase\">\n            <Jumbotron>\n              <h1>Bookshelf</h1>\n            </Jumbotron>\n            {this.state.books.length ? (\n              <div className=\"shelf\">\n                {this.state.books.map(book => (\n                  <BookSpine \n                    key={book._id}\n                    title={book.title}\n                    authors={book.authors}\n                    link={book.link}\n                    image = {book.image}\n                    description = {book.description}\n                    handleDelete={() => this.handleDelete(book._id)}\n                  />  \n\n                ))}\n              </div>\n            ) : (\n                <h3>No saved books to display</h3>\n              )}\n          </Col>\n        </Row>\n      </Container >\n    );\n  }\n}\nexport default Shelf;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/emilygilbertsen/Desktop/Personal Work/google-books-library/client/src/pages/Shelf/index.js\";\nimport React, { Component } from \"react\";\nimport DeleteBtn from \"../../components/DeleteBtn\";\nimport Jumbotron from \"../../components/Jumbotron\";\nimport API from \"../../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../../components/Grid\";\nimport { List, ListItem } from \"../../components/List\";\nimport './style.css';\nimport BookSpine from \"../../components/BookSpine\";\n\nclass Shelf extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      books: []\n    };\n\n    this.componentDidMount = () => {\n      this.loadSavedBooks();\n    };\n\n    this.handleDelete = id => {\n      API.deleteBook(id).then(res => this.loadSavedBooks()).catch(err => console.log(err));\n    };\n  }\n\n  // Loads all books saved books and sets them to books\n  loadSavedBooks() {\n    API.getBooks().then(res => {\n      this.setState({\n        books: res.data\n      });\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      size: \"md-12\",\n      className: \"bookBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Jumbotron, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }, \"Bookshelf\")), this.state.books.length ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    }, this.state.books.map(book => /*#__PURE__*/React.createElement(BookSpine, {\n      key: book._id,\n      title: book.title,\n      authors: book.authors,\n      handleDelete: () => this.handleDelete(book._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 19\n      }\n    }))) : /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, \"No saved books to display\"))));\n  }\n\n}\n\nexport default Shelf;","map":{"version":3,"sources":["/Users/emilygilbertsen/Desktop/Personal Work/google-books-library/client/src/pages/Shelf/index.js"],"names":["React","Component","DeleteBtn","Jumbotron","API","Link","Col","Row","Container","List","ListItem","BookSpine","Shelf","state","books","componentDidMount","loadSavedBooks","handleDelete","id","deleteBook","then","res","catch","err","console","log","getBooks","setState","data","render","length","map","book","_id","title","authors"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,uBAApC;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,uBAA/B;AACA,OAAO,aAAP;AACA,OAAOC,SAAP,MAAsB,4BAAtB;;AAEA,MAAMC,KAAN,SAAoBX,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BY,KAD4B,GACpB;AACNC,MAAAA,KAAK,EAAE;AADD,KADoB;;AAAA,SAM5BC,iBAN4B,GAMR,MAAM;AACxB,WAAKC,cAAL;AACD,KAR2B;;AAAA,SAqB5BC,YArB4B,GAqBbC,EAAE,IAAI;AACnBd,MAAAA,GAAG,CAACe,UAAJ,CAAeD,EAAf,EACGE,IADH,CACQC,GAAG,IAAI,KAAKL,cAAL,EADf,EAEGM,KAFH,CAESC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFhB;AAGD,KAzB2B;AAAA;;AAS5B;AACAP,EAAAA,cAAc,GAAG;AACfZ,IAAAA,GAAG,CAACsB,QAAJ,GACGN,IADH,CACQC,GAAG,IAAI;AACX,WAAKM,QAAL,CAAc;AACZb,QAAAA,KAAK,EAAEO,GAAG,CAACO;AADC,OAAd;AAGD,KALH,EAMGN,KANH,CAMSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANhB;AAOD;;AASDM,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAC,OAAV;AAAkB,MAAA,SAAS,EAAE,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF,EAIG,KAAKhB,KAAL,CAAWC,KAAX,CAAiBgB,MAAjB,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKjB,KAAL,CAAWC,KAAX,CAAiBiB,GAAjB,CAAqBC,IAAI,iBACxB,oBAAC,SAAD;AACE,MAAA,GAAG,EAAEA,IAAI,CAACC,GADZ;AAEE,MAAA,KAAK,EAAED,IAAI,CAACE,KAFd;AAGE,MAAA,OAAO,EAAEF,IAAI,CAACG,OAHhB;AAIE,MAAA,YAAY,EAAE,MAAM,KAAKlB,YAAL,CAAkBe,IAAI,CAACC,GAAvB,CAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CADD,gBAaG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAjBN,CADF,CADF,CADF;AA0BD;;AAtD2B;;AAwD9B,eAAerB,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport DeleteBtn from \"../../components/DeleteBtn\";\nimport Jumbotron from \"../../components/Jumbotron\";\nimport API from \"../../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../../components/Grid\";\nimport { List, ListItem } from \"../../components/List\";\nimport './style.css';\nimport BookSpine from \"../../components/BookSpine\";\n\nclass Shelf extends Component {\n  state = {\n    books: []\n  };\n\n  // Setting saved books to books state variable\n  componentDidMount = () => {\n    this.loadSavedBooks();\n  }\n  // Loads all books saved books and sets them to books\n  loadSavedBooks() {\n    API.getBooks()\n      .then(res => {\n        this.setState({\n          books: res.data\n        })\n      })\n      .catch(err => console.log(err));\n  };\n\n  // Deletes a book from the database with a given id, then reloads books from the db\n  handleDelete = id => {\n    API.deleteBook(id)\n      .then(res => this.loadSavedBooks())\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-12\" className= \"bookBox\">\n            <Jumbotron>\n              <h1>Bookshelf</h1>\n            </Jumbotron>\n            {this.state.books.length ? (\n              <div>\n                {this.state.books.map(book => (\n                  <BookSpine \n                    key={book._id}\n                    title={book.title}\n                    authors={book.authors}\n                    handleDelete={() => this.handleDelete(book._id)}\n                  />  \n\n                ))}\n              </div>\n            ) : (\n                <h3>No saved books to display</h3>\n              )}\n          </Col>\n        </Row>\n      </Container >\n    );\n  }\n}\nexport default Shelf;\n"]},"metadata":{},"sourceType":"module"}